// <auto-generated />
using System;
using Kyzmav2.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Kyzmav2.Migrations
{
    [DbContext(typeof(ourmoodlecontext))]
    partial class ourmoodlecontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Kyzmav2.Models.comment_teacher", b =>
                {
                    b.Property<int>("CommentTId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CommentTId"));

                    b.Property<int>("HomeworkId")
                        .HasColumnType("integer");

                    b.Property<string>("TeacherComment")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.HasKey("CommentTId");

                    b.HasIndex("HomeworkId");

                    b.ToTable("comment_teachers");
                });

            modelBuilder.Entity("Kyzmav2.Models.commentstudent", b =>
                {
                    b.Property<int>("CommentSId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CommentSId"));

                    b.Property<int>("HomeworkId")
                        .HasColumnType("integer");

                    b.Property<string>("StudentComment")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.HasKey("CommentSId");

                    b.HasIndex("HomeworkId");

                    b.ToTable("commentstudents");
                });

            modelBuilder.Entity("Kyzmav2.Models.dates_of_dz", b =>
                {
                    b.Property<int>("DatezdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DatezdId"));

                    b.Property<DateTime>("DzDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("HomeworkId")
                        .HasColumnType("integer");

                    b.HasKey("DatezdId");

                    b.HasIndex("HomeworkId");

                    b.ToTable("dates_of_dzs");
                });

            modelBuilder.Entity("Kyzmav2.Models.groups", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("GroupId"));

                    b.Property<string>("NameGroup")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("GroupId");

                    b.ToTable("groups");
                });

            modelBuilder.Entity("Kyzmav2.Models.homework", b =>
                {
                    b.Property<int>("HomeworkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("HomeworkId"));

                    b.Property<DateTime>("DeadlineDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("HomeworkDescription")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<int>("PlanId")
                        .HasColumnType("integer");

                    b.Property<string>("StatusHomework")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("WayHomework")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("character varying(400)");

                    b.HasKey("HomeworkId");

                    b.HasIndex("PlanId");

                    b.ToTable("homeworks");
                });

            modelBuilder.Entity("Kyzmav2.Models.notes", b =>
                {
                    b.Property<int>("NoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("NoteId"));

                    b.Property<DateTime>("NoteDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NoteText")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<int>("NotesTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("NoteId");

                    b.HasIndex("NotesTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("notes");
                });

            modelBuilder.Entity("Kyzmav2.Models.notetype", b =>
                {
                    b.Property<int>("NotesTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("NotesTypeId"));

                    b.Property<string>("NoteTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("NotesTypeId");

                    b.ToTable("notetypes");

                    b.HasData(
                        new
                        {
                            NotesTypeId = 1,
                            NoteTypeName = "First"
                        },
                        new
                        {
                            NotesTypeId = 2,
                            NoteTypeName = "Second"
                        },
                        new
                        {
                            NotesTypeId = 3,
                            NoteTypeName = "Third"
                        });
                });

            modelBuilder.Entity("Kyzmav2.Models.role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("RoleId");

                    b.ToTable("roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "Учитель"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "Студенет"
                        });
                });

            modelBuilder.Entity("Kyzmav2.Models.userss", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("DOB")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("GroupId")
                        .HasColumnType("integer");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("UserId");

                    b.HasIndex("GroupId");

                    b.HasIndex("RoleId");

                    b.ToTable("userss");
                });

            modelBuilder.Entity("Kyzmav2.Models.working_plan", b =>
                {
                    b.Property<int>("PlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PlanId"));

                    b.Property<string>("PlanDescription")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("PlanTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("WayOfFile")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.HasKey("PlanId");

                    b.HasIndex("UserId");

                    b.ToTable("working_plans");
                });

            modelBuilder.Entity("Kyzmav2.Models.comment_teacher", b =>
                {
                    b.HasOne("Kyzmav2.Models.homework", "homeworks")
                        .WithMany("comment_teachers")
                        .HasForeignKey("HomeworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("homeworks");
                });

            modelBuilder.Entity("Kyzmav2.Models.commentstudent", b =>
                {
                    b.HasOne("Kyzmav2.Models.homework", "homeworks")
                        .WithMany("commentstudents")
                        .HasForeignKey("HomeworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("homeworks");
                });

            modelBuilder.Entity("Kyzmav2.Models.dates_of_dz", b =>
                {
                    b.HasOne("Kyzmav2.Models.homework", "homeworks")
                        .WithMany("dates_of_dzs")
                        .HasForeignKey("HomeworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("homeworks");
                });

            modelBuilder.Entity("Kyzmav2.Models.homework", b =>
                {
                    b.HasOne("Kyzmav2.Models.working_plan", "working_plans")
                        .WithMany("homeworks")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("working_plans");
                });

            modelBuilder.Entity("Kyzmav2.Models.notes", b =>
                {
                    b.HasOne("Kyzmav2.Models.notetype", "notetypes")
                        .WithMany("notes")
                        .HasForeignKey("NotesTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kyzmav2.Models.userss", "userss")
                        .WithMany("notes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("notetypes");

                    b.Navigation("userss");
                });

            modelBuilder.Entity("Kyzmav2.Models.userss", b =>
                {
                    b.HasOne("Kyzmav2.Models.groups", "groups")
                        .WithMany("userss")
                        .HasForeignKey("GroupId");

                    b.HasOne("Kyzmav2.Models.role", "roles")
                        .WithMany("userss")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("groups");

                    b.Navigation("roles");
                });

            modelBuilder.Entity("Kyzmav2.Models.working_plan", b =>
                {
                    b.HasOne("Kyzmav2.Models.userss", "userss")
                        .WithMany("working_plans")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("userss");
                });

            modelBuilder.Entity("Kyzmav2.Models.groups", b =>
                {
                    b.Navigation("userss");
                });

            modelBuilder.Entity("Kyzmav2.Models.homework", b =>
                {
                    b.Navigation("comment_teachers");

                    b.Navigation("commentstudents");

                    b.Navigation("dates_of_dzs");
                });

            modelBuilder.Entity("Kyzmav2.Models.notetype", b =>
                {
                    b.Navigation("notes");
                });

            modelBuilder.Entity("Kyzmav2.Models.role", b =>
                {
                    b.Navigation("userss");
                });

            modelBuilder.Entity("Kyzmav2.Models.userss", b =>
                {
                    b.Navigation("notes");

                    b.Navigation("working_plans");
                });

            modelBuilder.Entity("Kyzmav2.Models.working_plan", b =>
                {
                    b.Navigation("homeworks");
                });
#pragma warning restore 612, 618
        }
    }
}
